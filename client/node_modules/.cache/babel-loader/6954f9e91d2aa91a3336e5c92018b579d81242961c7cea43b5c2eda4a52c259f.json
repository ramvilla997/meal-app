{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\16132\\\\work-space\\\\enterpenur\\\\meal-app\\\\client\\\\src\\\\components\\\\RegisterForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { TextField, Button, Paper, Typography, Container, Grid } from '@material-ui/core';\nimport useStyles from '../styles/RegisterForm'; // Import custom styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = () => {\n  _s();\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: ''\n  });\n  const {\n    setUser\n  } = useContext(AuthContext); // Ensure setUser is defined in AuthContext\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const classes = useStyles();\n  const handleChange = e => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage(''); // Reset message before the new request\n    try {\n      const response = await axios.post('/auth/register', credentials);\n      if (response.data.token) {\n        localStorage.setItem('token', response.data.token); // Store the token\n        setUser(response.data.user); // Update user context\n        navigate('/login'); // Redirect to login page\n      } else {\n        // Handle the case where there is no token in the response\n        setMessage('Registration successful, but no token received.');\n      }\n    } catch (error) {\n      const errorMessage = error.response && error.response.data && error.response.data.message ? error.response.data.message : 'Registration failed: ' + error.message;\n      setMessage(errorMessage);\n      console.error(error);\n    }\n  };\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <form onSubmit={handleSubmit}>\n    //     <input\n    //       name=\"username\"\n    //       value={credentials.username}\n    //       onChange={handleChange}\n    //       placeholder=\"Username\"\n    //       required\n    //     />\n    //     <input\n    //       name=\"password\"\n    //       type=\"password\"\n    //       value={credentials.password}\n    //       onChange={handleChange}\n    //       placeholder=\"Password\"\n    //       required\n    //     />\n    //     <button type=\"submit\">Register</button>\n    //     {message && <p>{message}</p>}\n    //   </form>\n    // </div>\n    _jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        elevation: 3,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"username\",\n                label: \"Username\",\n                variant: \"outlined\",\n                fullWidth: true,\n                required: true,\n                value: credentials.username,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                name: \"password\",\n                label: \"Password\",\n                variant: \"outlined\",\n                type: \"password\",\n                fullWidth: true,\n                required: true,\n                value: credentials.password,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.submit,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), message && /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"error\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(RegisterForm, \"NvDjVTltBBPIr2lfliMjGmdnB5U=\", false, function () {\n  return [useNavigate, useStyles];\n});\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","useContext","axios","useNavigate","AuthContext","TextField","Button","Paper","Typography","Container","Grid","useStyles","jsxDEV","_jsxDEV","RegisterForm","_s","credentials","setCredentials","username","password","setUser","message","setMessage","navigate","classes","handleChange","e","target","name","value","handleSubmit","preventDefault","response","post","data","token","localStorage","setItem","user","error","errorMessage","console","component","maxWidth","children","className","paper","elevation","variant","fileName","_jsxFileName","lineNumber","columnNumber","form","onSubmit","container","spacing","item","xs","label","fullWidth","required","onChange","type","color","submit","_c","$RefreshReg$"],"sources":["C:/Users/16132/work-space/enterpenur/meal-app/client/src/components/RegisterForm.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { TextField, Button, Paper, Typography, Container, Grid } from '@material-ui/core';\r\nimport useStyles from '../styles/RegisterForm'; // Import custom styles\r\n\r\n\r\nconst RegisterForm = () => {\r\n  const [credentials, setCredentials] = useState({ username: '', password: '' });\r\n  const { setUser } = useContext(AuthContext);  // Ensure setUser is defined in AuthContext\r\n  const [message, setMessage] = useState('');\r\n  const navigate = useNavigate();\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (e) => {\r\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\r\n  };\r\n\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setMessage('');  // Reset message before the new request\r\n    try {\r\n      const response = await axios.post('/auth/register', credentials);\r\n      if (response.data.token) {\r\n        localStorage.setItem('token', response.data.token);  // Store the token\r\n        setUser(response.data.user);  // Update user context\r\n        navigate('/login');  // Redirect to login page\r\n      } else {\r\n        // Handle the case where there is no token in the response\r\n        setMessage('Registration successful, but no token received.');\r\n      }\r\n    } catch (error) {\r\n      const errorMessage = error.response && error.response.data && error.response.data.message\r\n        ? error.response.data.message\r\n        : 'Registration failed: ' + error.message;\r\n      setMessage(errorMessage);\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    // <div>\r\n    //   <form onSubmit={handleSubmit}>\r\n    //     <input\r\n    //       name=\"username\"\r\n    //       value={credentials.username}\r\n    //       onChange={handleChange}\r\n    //       placeholder=\"Username\"\r\n    //       required\r\n    //     />\r\n    //     <input\r\n    //       name=\"password\"\r\n    //       type=\"password\"\r\n    //       value={credentials.password}\r\n    //       onChange={handleChange}\r\n    //       placeholder=\"Password\"\r\n    //       required\r\n    //     />\r\n    //     <button type=\"submit\">Register</button>\r\n    //     {message && <p>{message}</p>}\r\n    //   </form>\r\n    // </div>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n        <Paper className={classes.paper} elevation={3}>\r\n          <Typography variant=\"h5\">Register</Typography>\r\n          <form className={classes.form} onSubmit={handleSubmit}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name=\"username\"\r\n                  label=\"Username\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  required\r\n                  value={credentials.username}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  variant=\"outlined\"\r\n                  type=\"password\"\r\n                  fullWidth\r\n                  required\r\n                  value={credentials.password}\r\n                  onChange={handleChange}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\r\n              Register\r\n            </Button>\r\n            {message && <Typography color=\"error\">{message}</Typography>}\r\n            {/* Add any other buttons or links you need */}\r\n          </form>\r\n        </Paper>\r\n      </Container>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
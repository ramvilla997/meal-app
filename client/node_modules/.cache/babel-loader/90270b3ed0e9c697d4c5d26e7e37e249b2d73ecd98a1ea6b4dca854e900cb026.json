{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\16132\\\\work-space\\\\enterpenur\\\\meal-app\\\\client\\\\src\\\\components\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { TextField, Button, Grid, FormControl, FormControlLabel, FormGroup, Checkbox, Select, MenuItem, InputLabel, Paper, Typography, Container } from '@material-ui/core';\nimport useStyles from '../styles/profileForm'; // Import custom styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProfileForm = () => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  // Initialize the profile with null and check its existence before rendering the form\n  // const [profile, setProfile] = useState(null);\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const [profile, setProfile] = useState({\n    tastePreferences: '',\n    dietaryRestrictions: [],\n    preferredCuisines: [],\n    mealTypes: [],\n    shoppingFrequency: ''\n    // Additional preferences can be added here\n  });\n\n  const [success, setSuccess] = useState(''); // New state for success message\n  const [error, setError] = useState(''); // New state for error message\n  useEffect(() => {\n    // Fetch the profile when the component is mounted\n    const fetchProfile = async () => {\n      if (!user) return; // If there's no user, don't fetch the profile\n\n      try {\n        const response = await axios.get('/api/user/profile', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}` // Make sure to send the token\n          }\n        });\n        // Set the profile or initialize it if there's no data\n        setProfile(response.data || {\n          tastePreferences: '',\n          dietaryRestrictions: []\n        });\n      } catch (err) {\n        console.error(err);\n        // If there's an error (like a 404), initialize the profile state\n        setProfile({\n          tastePreferences: '',\n          dietaryRestrictions: []\n        });\n      }\n    };\n    fetchProfile();\n  }, [user]); // Depend on the user state\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.put('/api/user/profile', profile, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}` // Make sure to send the token\n        }\n      });\n\n      console.log('Profile updated', response.data);\n      setSuccess('Profile updated successfully!'); // Set success message\n      navigate(\"/recipes\");\n      setError(''); // Clear any previous errors\n      //navigate('/dashboard'); // Adjust the route as needed\n    } catch (err) {\n      console.error(err);\n      setError('Failed to update profile. Please try again.'); // Set error message\n      setSuccess(''); // Clear any previous success message\n    }\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (e.target.type === 'checkbox') {\n      if (e.target.checked) {\n        // Add the value to the array\n        setProfile(prevProfile => ({\n          ...prevProfile,\n          [name]: [...prevProfile[name], value]\n        }));\n      } else {\n        // Remove the value from the array\n        setProfile(prevProfile => ({\n          ...prevProfile,\n          [name]: prevProfile[name].filter(item => item !== value)\n        }));\n      }\n    } else {\n      setProfile(prevProfile => ({\n        ...prevProfile,\n        [name]: value\n      }));\n    }\n  };\n\n  // If the profile is null (data is still loading or there was an error), display a loading message or return null\n  if (!profile) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render the form once the profile data is loaded\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [success && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Profile Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Taste Preferences\",\n                name: \"tastePreferences\",\n                value: profile.tastePreferences,\n                onChange: handleChange,\n                variant: \"outlined\",\n                className: classes.formControl\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                component: \"fieldset\",\n                className: classes.formControl,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  shrink: true,\n                  children: \"Dietary Restrictions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  className: classes.formGroup,\n                  children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                    control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      checked: profile.dietaryRestrictions.includes('Gluten Free'),\n                      onChange: handleChange,\n                      name: \"dietaryRestrictions\",\n                      value: \"Gluten Free\",\n                      className: classes.checkbox\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 23\n                    }, this),\n                    label: \"Gluten Free\",\n                    className: classes.formLabel\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                variant: \"outlined\",\n                className: classes.formControl,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  children: \"Shopping Frequency\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  value: profile.shoppingFrequency,\n                  onChange: handleChange,\n                  label: \"Shopping Frequency\",\n                  name: \"shoppingFrequency\",\n                  className: classes.selectEmpty,\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    children: /*#__PURE__*/_jsxDEV(\"em\", {\n                      children: \"None\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 38\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"Weekly\",\n                    children: \"Weekly\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                fullWidth: true,\n                className: classes.submitButton,\n                children: \"Save Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n};\n_s(ProfileForm, \"bZkWjOcT1FZElhZZsa2DC9PyR7o=\", false, function () {\n  return [useStyles, useNavigate];\n});\n_c = ProfileForm;\nexport default ProfileForm;\nvar _c;\n$RefreshReg$(_c, \"ProfileForm\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","useNavigate","AuthContext","TextField","Button","Grid","FormControl","FormControlLabel","FormGroup","Checkbox","Select","MenuItem","InputLabel","Paper","Typography","Container","useStyles","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfileForm","_s","user","classes","navigate","profile","setProfile","tastePreferences","dietaryRestrictions","preferredCuisines","mealTypes","shoppingFrequency","success","setSuccess","error","setError","fetchProfile","response","get","headers","Authorization","localStorage","getItem","data","err","console","handleSubmit","e","preventDefault","put","log","handleChange","name","value","target","type","checked","prevProfile","filter","item","children","fileName","_jsxFileName","lineNumber","columnNumber","className","component","maxWidth","elevation","paper","variant","onSubmit","container","spacing","xs","fullWidth","label","onChange","formControl","shrink","formGroup","control","includes","checkbox","formLabel","selectEmpty","color","submitButton","_c","$RefreshReg$"],"sources":["C:/Users/16132/work-space/enterpenur/meal-app/client/src/components/Profile.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { TextField, Button,Grid, FormControl, FormControlLabel, FormGroup, Checkbox, Select, MenuItem, InputLabel, Paper, Typography, Container } from '@material-ui/core';\r\nimport useStyles from '../styles/profileForm'; // Import custom styles\r\n\r\nconst ProfileForm = () => {\r\n  const { user } = useContext(AuthContext);\r\n  // Initialize the profile with null and check its existence before rendering the form\r\n  // const [profile, setProfile] = useState(null);\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n\r\n  const [profile, setProfile] = useState({\r\n    tastePreferences: '',\r\n    dietaryRestrictions: [],\r\n    preferredCuisines: [],\r\n    mealTypes: [],\r\n    shoppingFrequency: '',\r\n    // Additional preferences can be added here\r\n  });\r\n  const [success, setSuccess] = useState(''); // New state for success message\r\n  const [error, setError] = useState(''); // New state for error message\r\n  useEffect(() => {\r\n    // Fetch the profile when the component is mounted\r\n    const fetchProfile = async () => {\r\n      if (!user) return; // If there's no user, don't fetch the profile\r\n\r\n      try {\r\n        const response = await axios.get('/api/user/profile', {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`, // Make sure to send the token\r\n          },\r\n        });\r\n        // Set the profile or initialize it if there's no data\r\n        setProfile(response.data || { tastePreferences: '', dietaryRestrictions: [] });\r\n      } catch (err) {\r\n        console.error(err);\r\n        // If there's an error (like a 404), initialize the profile state\r\n        setProfile({ tastePreferences: '', dietaryRestrictions: [] });\r\n      }\r\n    };\r\n\r\n    fetchProfile();\r\n  }, [user]); // Depend on the user state\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.put('/api/user/profile', profile, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`, // Make sure to send the token\r\n        },\r\n      });\r\n      console.log('Profile updated', response.data);\r\n      setSuccess('Profile updated successfully!'); // Set success message\r\n      navigate(\"/recipes\")\r\n      setError(''); // Clear any previous errors\r\n      //navigate('/dashboard'); // Adjust the route as needed\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError('Failed to update profile. Please try again.'); // Set error message\r\n      setSuccess(''); // Clear any previous success message\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (e.target.type === 'checkbox') {\r\n      if (e.target.checked) {\r\n        // Add the value to the array\r\n        setProfile((prevProfile) => ({\r\n          ...prevProfile,\r\n          [name]: [...prevProfile[name], value],\r\n        }));\r\n      } else {\r\n        // Remove the value from the array\r\n        setProfile((prevProfile) => ({\r\n          ...prevProfile,\r\n          [name]: prevProfile[name].filter((item) => item !== value),\r\n        }));\r\n      }\r\n    } else {\r\n      setProfile((prevProfile) => ({\r\n        ...prevProfile,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  // If the profile is null (data is still loading or there was an error), display a loading message or return null\r\n  if (!profile) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // Render the form once the profile data is loaded\r\n  return (\r\n    <>\r\n      {success && <div className=\"success-message\">{success}</div>}\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      {/* <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Taste Preferences:\r\n        <input\r\n          type=\"text\"\r\n          name=\"tastePreferences\"\r\n          value={profile.tastePreferences}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n\r\n      <fieldset>\r\n        <legend>Dietary Restrictions:</legend>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"dietaryRestrictions\"\r\n            value=\"Gluten Free\"\r\n            onChange={handleChange}\r\n            checked={profile.dietaryRestrictions.includes('Gluten Free')}\r\n          />\r\n          Gluten Free\r\n        </label>\r\n      </fieldset>\r\n\r\n      <fieldset>\r\n        <legend>Preferred Cuisines:</legend>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"preferredCuisines\"\r\n            value=\"Italian\"\r\n            onChange={handleChange}\r\n            checked={profile.preferredCuisines.includes('Italian')}\r\n          />\r\n          Italian\r\n        </label>\r\n      </fieldset>\r\n\r\n      <fieldset>\r\n        <legend>Meal Types:</legend>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"mealTypes\"\r\n            value=\"Breakfast\"\r\n            onChange={handleChange}\r\n            checked={profile.mealTypes.includes('Breakfast')}\r\n          />\r\n          Breakfast\r\n        </label>\r\n      </fieldset>\r\n\r\n      <label>\r\n        Shopping Frequency:\r\n        <select\r\n          name=\"shoppingFrequency\"\r\n          value={profile.shoppingFrequency}\r\n          onChange={handleChange}\r\n        >\r\n          <option value=\"\">Select...</option>\r\n          <option value=\"Weekly\">Weekly</option>\r\n          <option value=\"Bi-Weekly\">Bi-Weekly</option>\r\n          <option value=\"Monthly\">Monthly</option>\r\n        </select>\r\n      </label>\r\n\r\n      <button type=\"submit\">Save Profile</button>\r\n    </form> */}\r\n\r\n<Container component=\"main\" maxWidth=\"md\">\r\n      <Paper elevation={3} className={classes.paper}>\r\n        <Typography variant=\"h6\">Profile Settings</Typography>\r\n        <form onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Taste Preferences\"\r\n                name=\"tastePreferences\"\r\n                value={profile.tastePreferences}\r\n                onChange={handleChange}\r\n                variant=\"outlined\"\r\n                className={classes.formControl}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <FormControl component=\"fieldset\" className={classes.formControl}>\r\n                <InputLabel shrink>Dietary Restrictions</InputLabel>\r\n                <FormGroup className={classes.formGroup}>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={profile.dietaryRestrictions.includes('Gluten Free')}\r\n                        onChange={handleChange}\r\n                        name=\"dietaryRestrictions\"\r\n                        value=\"Gluten Free\"\r\n                        className={classes.checkbox}\r\n                      />\r\n                    }\r\n                    label=\"Gluten Free\"\r\n                    className={classes.formLabel}\r\n                  />\r\n                  {/* Repeat for other dietary restrictions */}\r\n                </FormGroup>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            {/* Repeat similar structure for Preferred Cuisines and Meal Types */}\r\n\r\n            <Grid item xs={12}>\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel>Shopping Frequency</InputLabel>\r\n                <Select\r\n                  value={profile.shoppingFrequency}\r\n                  onChange={handleChange}\r\n                  label=\"Shopping Frequency\"\r\n                  name=\"shoppingFrequency\"\r\n                  className={classes.selectEmpty}\r\n                >\r\n                  <MenuItem value=\"\"><em>None</em></MenuItem>\r\n                  <MenuItem value=\"Weekly\">Weekly</MenuItem>\r\n                  {/* ... other options ... */}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                fullWidth\r\n                className={classes.submitButton}\r\n              >\r\n                Save Profile\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}